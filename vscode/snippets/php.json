{
    "Public Method": {
        "prefix": "met",
        "body": [
            "public function $1(){",
            "    $2",
            "}"
        ],
        "description": "New Public Method"
    },
    "Protected Method": {
        "prefix": "pmet",
        "body": [
            "protected function $1(){",
            "\t$2",
            "}"
        ],
        "description": "New Protected method"
    },
    "PHP Constructor": {
        "prefix": "__c",
        "body": [
            "public function __construct()\r",
            "{\r",
            "    \\$this->middleware('$1')->except('$2');\r",
            "}"
        ],
        "description": "constructor"
    },
    "boot method": {
        "prefix": "boot_",
        "body": [
            "public static function boot()",
            "{",
            "    parent::boot();",
            "",
            "    static::$1(function (\\$model) {",
            "        $2",
            "    });",
            "}"
        ],
        "description": "laravel model events \n created/ing | updated/ing | deleted/ing | restored/ing | saved/ing"
    },
    "ajax response": {
        "prefix": "res:return",
        "body": [
            "return response($1, ${2:200});"
        ],
        "description": "laravel ajax response"
    },
    "json response": {
        "prefix": "res:json",
        "body": [
            "return response()->json($1);"
        ],
        "description": "laravel response json"
    },
    "debugbar info": {
        "prefix": "dbarInfo",
        "body": [
            "\\Debugbar::info($1);"
        ],
        "description": "laravel ajax response"
    },
    "db listen": {
        "prefix": "db:listen",
        "body": [
            "\\Illuminate\\Support\\Facades\\DB::listen(function (\\$query) {",
            "   var_dump($query->sql, $query->bindings); ",
            "});"
        ],
        "description": "laravel db listen"
    },
    "echo <pre>": {
        "prefix": "echo:pre",
        "body": [
            "echo \"<pre>\";",
            "  ${2:print_r}($$1);",
            "echo \"</pre>\";"
        ],
        "description": " "
    },
    "wordpress dd()": {
        "prefix": "wp:dd",
        "body": [
          "function dd(\\$data)",
          "{",
          "  ini_set(\"highlight.comment\", \"#969896; font-style: italic\");",
          "  ini_set(\"highlight.default\", \"#FFFFFF\");",
          "  ini_set(\"highlight.html\", \"#D16568\");",
          "  ini_set(\"highlight.keyword\", \"#7FA3BC; font-weight: bold\");",
          "  ini_set(\"highlight.string\", \"#F2C47E\");",
          "  \\$output = highlight_string(\"<?php\\n\\n\" . var_export(\\$data, true), true);",
          "  echo \"<div style=\\\"background-color: #1C1E21; padding: 1rem\\\">{\\$output}</div>\";",
          "  die();",
          "}"
        ],
        "description": "laravel dd() to wordpress"
      }
}